


services:
  grafana:
    image: grafana/grafana:latest
    user: "$UID:$GID"
    restart: unless-stopped
    container_name: gf
    volumes:       
      - grafana_data:/var/lib/grafana
    ports: 
      - "3000:3000"
    restart: always

  prometheus:
    container_name: prom
    image: "prom/prometheus:latest"
    ports: 
      - "9090:9090"
    volumes: 
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      #- prometheus_data:/etc/prometheus/prometheus.yml
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      #- '--config.file=/mount/x/Dev/Projects/Docker/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - "--web.console.libraries=/usr/share/prometheus/console_libraries" 
      - "--web.console.templates=/usr/share/prometheus/consoles"
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - redis

  redis:
    image: redis:latest
    container_name: redis
    ports:
    - 6379:6379  
  
  rust_api:
    build: ./rust_api
    container_name: rust_api


    
volumes: 
  prometheus_data: {}
  grafana_data: {}
